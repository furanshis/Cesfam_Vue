{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    /// son las variables o información\n    carrito: {\n      items: []\n    },\n    isAuthenticated: false,\n    token: '',\n    /// esta se ocupa cuando se añada el login\n    isLoading: false\n  },\n  getters: {},\n  mutations: {\n    ///son las mutaciones sincronicas a las variables, ya que, no se pueden cambiar directamente\n    initializedStore(state) {\n      /// esta función nos permite guardar cosas el almacenamiento local\n      if (localStorage.getItem('carrito')) {\n        state.carrito = JSON.parse(localStorage.getItem('carrito'));\n      } else {\n        localStorage.setItem('carrito', JSON.stringify(state.carrito));\n      }\n    },\n\n    addToCart(state, item) {\n      /// funcion para añadir un remedio al carrito\n      const exist = state.carrito.items.filter(i => i.remedio.id === item.remedio.id); /// primero verificamos si existe el remedio en el carrito o no\n\n      if (exist.length) {\n        /// si existe, o sea, si el largo es mayor a 0 entonces añadimos + 1 a la cantidad, si no existe entonces añadimos el remedio al carrito\n        exist[0].quantity = parseInt(exist[0].quantity) + parseInt(item.quantity);\n      } else {}\n    }\n\n  },\n  actions: {/// son las funciones asincronicas para cambiarlas\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","carrito","items","isAuthenticated","token","isLoading","getters","mutations","initializedStore","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","item","exist","filter","i","remedio","id","length","quantity","parseInt","actions","modules"],"sources":["/Users/franciscosantander/Desktop/Cesfam/cesfam_vue/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: { /// son las variables o información\n    carrito: {\n      items: [],\n    },\n    isAuthenticated: false,\n    token: '', /// esta se ocupa cuando se añada el login\n    isLoading: false,\n  },\n  getters: { \n  },\n  mutations: { ///son las mutaciones sincronicas a las variables, ya que, no se pueden cambiar directamente\n    initializedStore(state){ /// esta función nos permite guardar cosas el almacenamiento local\n      if (localStorage.getItem('carrito')){\n        state.carrito = JSON.parse(localStorage.getItem('carrito'))\n      } else {\n        localStorage.setItem('carrito', JSON.stringify(state.carrito))\n      }\n    },\n    addToCart(state, item){ /// funcion para añadir un remedio al carrito\n      const exist = state.carrito.items.filter(i => i.remedio.id === item.remedio.id) /// primero verificamos si existe el remedio en el carrito o no\n\n      if (exist.length){ /// si existe, o sea, si el largo es mayor a 0 entonces añadimos + 1 a la cantidad, si no existe entonces añadimos el remedio al carrito\n        exist[0].quantity = parseInt(exist[0].quantity) + parseInt(item.quantity)\n      } else {\n\n      }\n    },\n  },\n  actions: { /// son las funciones asincronicas para cambiarlas\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IAAE;IACPC,OAAO,EAAE;MACPC,KAAK,EAAE;IADA,CADJ;IAILC,eAAe,EAAE,KAJZ;IAKLC,KAAK,EAAE,EALF;IAKM;IACXC,SAAS,EAAE;EANN,CADkB;EASzBC,OAAO,EAAE,EATgB;EAWzBC,SAAS,EAAE;IAAE;IACXC,gBAAgB,CAACR,KAAD,EAAO;MAAE;MACvB,IAAIS,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAoC;QAClCV,KAAK,CAACC,OAAN,GAAgBU,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAhB;MACD,CAFD,MAEO;QACLD,YAAY,CAACI,OAAb,CAAqB,SAArB,EAAgCF,IAAI,CAACG,SAAL,CAAed,KAAK,CAACC,OAArB,CAAhC;MACD;IACF,CAPQ;;IAQTc,SAAS,CAACf,KAAD,EAAQgB,IAAR,EAAa;MAAE;MACtB,MAAMC,KAAK,GAAGjB,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoBgB,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACC,OAAF,CAAUC,EAAV,KAAiBL,IAAI,CAACI,OAAL,CAAaC,EAA9D,CAAd,CADoB,CAC4D;;MAEhF,IAAIJ,KAAK,CAACK,MAAV,EAAiB;QAAE;QACjBL,KAAK,CAAC,CAAD,CAAL,CAASM,QAAT,GAAoBC,QAAQ,CAACP,KAAK,CAAC,CAAD,CAAL,CAASM,QAAV,CAAR,GAA8BC,QAAQ,CAACR,IAAI,CAACO,QAAN,CAA1D;MACD,CAFD,MAEO,CAEN;IACF;;EAhBQ,CAXc;EA6BzBE,OAAO,EAAE,CAAE;EAAF,CA7BgB;EA+BzBC,OAAO,EAAE;AA/BgB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}