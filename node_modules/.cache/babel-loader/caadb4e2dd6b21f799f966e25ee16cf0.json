{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-pago\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"columns is-multiline\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"Proceso de pago\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;gCACPC,oBAEM,KAFN,EAEM;EAFDD,KAAK,EAAC;AAEL,CAFN,EAAiC,cAC7BC,oBAAsC,IAAtC,EAAsC;EAAlCD,KAAK,EAAC;AAA4B,CAAtC,EAAkB,iBAAlB,CAD6B,CAAjC;;AAAA;;oBAAAE;;uBADJC,oBAIM,KAJN,cAIMC,UAJN","names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_3"],"sourceRoot":"","sources":["/Users/franciscosantander/Desktop/Cesfam/cesfam_vue/src/views/Pago.vue"],"sourcesContent":["<template>\n    <div class=\"page-pago\">\n        <div class=\"columns is-multiline\">\n            <h1 class=\"title\">Proceso de pago</h1>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"Pago\",\n    data() {\n        return {\n            carrito: {\n                items: []\n            },\n            stripe: {},\n            card: {},\n            nombre: '',\n            apellido: '',\n            correo: '',\n            telefono: '',\n            direccion: '',\n            codigo_postal: '',\n            errors: [],\n        }\n    },\n    mounted() {\n        document.title = 'Pago | Cesfam'\n\n        this.carrito = this.$store.state.carrito\n    },\n    methods: {\n        getItemTotal(item){\n            return item.quantity * item.remedio.precioRemedio\n        }\n    },\n    computed: {\n        cartTotalLength(){\n            return this.carrito.items.reduce((acc, curVal) => { ///la funcion reduce() de js nos permite hacer un loop en todos los items del carrito, para asi poder incrementar el valor\n                return acc += curVal.quantity\n            }, 0)\n        },\n        cartTotalPrice(){\n            return this.carrito.items.reduce((acc, curVal) => { ///la funcion reduce() de js nos permite hacer un loop en todos los items del carrito, para asi poder incrementar el valor o el largo del carrito\n                return acc += curVal.remedio.precioRemedio * curVal.quantity\n            }, 0)\n        },\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}