{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'bulma-toast';\nexport default {\n  name: 'Resgistro',\n\n  data() {\n    return {\n      usuario: '',\n      contraseña: '',\n      contraseña2: '',\n      correo: '',\n      errors: []\n    };\n  },\n\n  methods: {\n    submitForm() {\n      this.errors = [];\n\n      if (this.usuario === '') {\n        this.errors.push('Ingrese un nombre de usuario');\n      }\n\n      if (this.contraseña === '') {\n        this.errors.push('Ingrese una contraseña');\n      }\n\n      if (this.contraseña2 !== this.contraseña) {\n        this.errors.push('Las contraseñas no coinciden');\n      }\n\n      if (!this.errors.length) {\n        const formData = {\n          username: this.usuario,\n          password: this.contraseña\n        };\n        axios.post(\"/api/v1/users/\", formData).then(response => {\n          toast({\n            message: 'La cuenta fue creada con exito',\n            type: 'is-success',\n            dismissible: true,\n            pauseOnHover: true,\n            duration: 2000,\n            position: 'bottom-right'\n          });\n          this.$router.push('/iniciar-sesion');\n        }).catch(error => {\n          if (error.response) {\n            for (const property in error.response.data) {\n              this.errors.push(`${property}: ${error.response.data[property]}`);\n            }\n\n            console.log(JSON.stringify(error.response.data));\n          } else if (error.message) {\n            this.errors.push(\"Algo salio mal. Intenta denuevo\");\n            console.log(JSON.stringify(error));\n          }\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8CA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,eAAe;EACXC,IAAI,EAAE,WADK;;EAEXC,IAAI,GAAE;IACF,OAAM;MACFC,OAAO,EAAE,EADP;MAEFC,UAAU,EAAE,EAFV;MAGFC,WAAW,EAAE,EAHX;MAIFC,MAAM,EAAE,EAJN;MAKFC,MAAM,EAAE;IALN,CAAN;EAOH,CAVU;;EAWXC,OAAO,EAAE;IACLC,UAAU,GAAE;MACR,KAAKF,MAAL,GAAc,EAAd;;MAEA,IAAI,KAAKJ,OAAL,KAAiB,EAArB,EAAwB;QACpB,KAAKI,MAAL,CAAYG,IAAZ,CAAiB,8BAAjB;MACJ;;MACA,IAAI,KAAKN,UAAL,KAAoB,EAAxB,EAA2B;QACvB,KAAKG,MAAL,CAAYG,IAAZ,CAAiB,wBAAjB;MACJ;;MACA,IAAI,KAAKL,WAAL,KAAqB,KAAKD,UAA9B,EAAyC;QACrC,KAAKG,MAAL,CAAYG,IAAZ,CAAiB,8BAAjB;MACJ;;MAEA,IAAI,CAAC,KAAKH,MAAL,CAAYI,MAAjB,EAAwB;QACpB,MAAMC,QAAO,GAAI;UACbC,QAAQ,EAAE,KAAKV,OADF;UAEbW,QAAQ,EAAE,KAAKV;QAFF,CAAjB;QAKAL,KAAI,CACHgB,IADD,CACM,gBADN,EACwBH,QADxB,EAECI,IAFD,CAEMC,QAAO,IAAI;UACbjB,KAAK,CAAC;YACFkB,OAAO,EAAE,gCADP;YAEFC,IAAI,EAAE,YAFJ;YAGFC,WAAW,EAAE,IAHX;YAIFC,YAAY,EAAE,IAJZ;YAKFC,QAAQ,EAAE,IALR;YAMFC,QAAQ,EAAE;UANR,CAAD,CAAL;UASA,KAAKC,OAAL,CAAad,IAAb,CAAkB,iBAAlB;QACH,CAbD,EAcCe,KAdD,CAcOC,KAAI,IAAI;UACX,IAAIA,KAAK,CAACT,QAAV,EAAoB;YAChB,KAAK,MAAMU,QAAX,IAAuBD,KAAK,CAACT,QAAN,CAAef,IAAtC,EAA2C;cACvC,KAAKK,MAAL,CAAYG,IAAZ,CAAkB,GAAEiB,QAAS,KAAID,KAAK,CAACT,QAAN,CAAef,IAAf,CAAoByB,QAApB,CAA8B,EAA/D;YACJ;;YAEAC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,KAAK,CAACT,QAAN,CAAef,IAA9B,CAAZ;UACJ,CANA,MAMO,IAAIwB,KAAK,CAACR,OAAV,EAAmB;YACtB,KAAKX,MAAL,CAAYG,IAAZ,CAAiB,iCAAjB;YAEAkB,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAZ;UACJ;QACH,CA1BD;MA2BJ;IACH;;EAhDI;AAXE,CAAf","names":["axios","toast","name","data","usuario","contraseña","contraseña2","correo","errors","methods","submitForm","push","length","formData","username","password","post","then","response","message","type","dismissible","pauseOnHover","duration","position","$router","catch","error","property","console","log","JSON","stringify"],"sourceRoot":"","sources":["/Users/franciscosantander/Desktop/Cesfam/cesfam_vue/src/views/Registro.vue"],"sourcesContent":["<template>\n    <div class=\"registro-page\">\n        <h1 class=\"title\">Registrar Usuario</h1>\n\n        <form @submit.prevent=\"submitForm\">\n            <div class=\"field\">\n                <label>Nombre de usuario</label>\n                <div class=\"control\">\n                    <input type=\"text\" class=\"input\" v-model=\"usuario\">\n                </div>\n            </div>\n\n            <div class=\"field\">\n                <label>Contraseña</label>\n                <div class=\"control\">\n                    <input type=\"password\" class=\"input\" v-model=\"contraseña\">\n                </div>\n            </div>\n\n            <div class=\"field\">\n                <label>Repita la contraseña</label>\n                <div class=\"control\">\n                    <input type=\"password\" class=\"input\" v-model=\"contraseña2\">\n                </div>\n            </div>\n\n            <div class=\"notification is-danger\" v-if=\"errors.length\">\n                <p v-for=\"error in errors\" v-bind:key=\"error\">{{ error }}</p>\n            </div>\n\n            <div class=\"field\">\n                <div class=\"control\">\n                    <button class=\"btn btn-outline-primary\">Registarse</button>\n                </div>\n            </div>\n\n            <hr>\n\n            O <router-link to=\"/iniciar-sesion\">Precione aquí</router-link> para iniciar sesión\n\n        </form>\n        \n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { toast } from 'bulma-toast'\nexport default {\n    name: 'Resgistro',\n    data(){\n        return{\n            usuario: '',\n            contraseña: '',\n            contraseña2: '',\n            correo: '',\n            errors: [] \n        }\n    },\n    methods: {\n        submitForm(){\n            this.errors = []\n\n            if (this.usuario === ''){\n                this.errors.push('Ingrese un nombre de usuario')\n            }\n            if (this.contraseña === ''){\n                this.errors.push('Ingrese una contraseña')\n            }\n            if (this.contraseña2 !== this.contraseña){\n                this.errors.push('Las contraseñas no coinciden')\n            }\n\n            if (!this.errors.length){\n                const formData = {\n                    username: this.usuario,\n                    password: this.contraseña\n                }\n\n                axios\n                .post(\"/api/v1/users/\", formData)\n                .then(response =>{\n                    toast({\n                        message: 'La cuenta fue creada con exito',\n                        type: 'is-success',\n                        dismissible: true,\n                        pauseOnHover: true,\n                        duration: 2000,\n                        position: 'bottom-right',\n                    })\n\n                    this.$router.push('/iniciar-sesion')\n                })\n                .catch(error =>{\n                    if (error.response) {\n                        for (const property in error.response.data){\n                            this.errors.push(`${property}: ${error.response.data[property]}`)\n                        }\n\n                        console.log(JSON.stringify(error.response.data))\n                    } else if (error.message) {\n                        this.errors.push(\"Algo salio mal. Intenta denuevo\")\n\n                        console.log(JSON.stringify(error))\n                    }\n                })\n            }\n        },\n    },\n}\n</script>"]},"metadata":{},"sourceType":"module"}